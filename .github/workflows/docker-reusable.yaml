name: Build docker image reusable workflow
run-name: Docker build ${{ github.event_name }} ${{ github.ref_name }} ${{ github.actor }} ${{ inputs.dockerfile }} to $ {{ inputs.tags }}


on:
  workflow_call:
    inputs:
      context:
        required: false
        type: string
        default: './'
      dockerfile:
        required: false
        type: string
        default: Dockerfile
      registry:
        required: false
        type: string
        default: docker.navvis.com
      tags:
        required: true
        type: string
      platforms:
        required: false
        type: string
        default: linux/amd64
    secrets:
      registry_password:
        description: Docker password
        required: true
      docker_hub_password:
        description: Docker Hub username. Required if you're using docker hub passwords
        required: false
      registry_username:
        description: Docker username
        required: true
      docker_hub_username:
        description: Docker Hub username. Required if you're using docker hub images
        required: false

jobs:
  docker:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          config-inline: |
            [registry."docker.io"]
              mirrors = ["dockerproxy.navvis.com"]
      - name: Login to Docker Hub
        if: inputs.docker_hub_username != ''
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.docker_hub_username }}
          password: ${{ secrets.docker_hub_password }}
      - name: Login to ${{ inputs.registry }}
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.registry_username }}
          password: ${{ secrets.registry_password }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.context }}
          platforms: ${{ inputs.platforms }}
          push: true
          tags: ${{ inputs.tags }}
          file: ${{ inputs.context }}/${{ inputs.dockerfile }}